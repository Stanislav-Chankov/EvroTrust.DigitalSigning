// <auto-generated />
using System;
using EvroTrust.DigitalSigning.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EvroTrust.DigitalSigning.Persistence.Migrations
{
    [DbContext(typeof(DigitalSigningDbContext))]
    [Migration("20250811110601_MoreProsAndReferences")]
    partial class MoreProsAndReferences
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EvroTrust.DigitalSigning.Persistence.Entities.Candidate", b =>
                {
                    b.Property<Guid>("CandidateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("LinkedInProfile")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.Property<DateTime>("RegisteredAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ResumeUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CandidateId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Candidates");
                });

            modelBuilder.Entity("EvroTrust.DigitalSigning.Persistence.Entities.CodeSolution", b =>
                {
                    b.Property<Guid>("CodeSolutionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CandidateEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CandidateFullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("CandidateId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CodingTaskId")
                        .HasColumnType("uuid");

                    b.Property<byte[]>("EncryptedSolution")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsReviewed")
                        .HasColumnType("boolean");

                    b.Property<string>("ReviewNotes")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ReviewedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Reviewer")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("CodeSolutionId");

                    b.HasIndex("CandidateId");

                    b.HasIndex("CodingTaskId");

                    b.ToTable("CodeSolutions");
                });

            modelBuilder.Entity("EvroTrust.DigitalSigning.Persistence.Entities.CodingTask", b =>
                {
                    b.Property<Guid>("CodingTaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("AssignedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("AssignedBy")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<Guid>("CandidateId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("character varying(2048)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.HasKey("CodingTaskId");

                    b.HasIndex("CandidateId");

                    b.ToTable("CodingTasks");
                });

            modelBuilder.Entity("EvroTrust.DigitalSigning.Persistence.Entities.Decision", b =>
                {
                    b.Property<Guid>("DecisionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CandidateId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CodeSolutionId")
                        .HasColumnType("uuid");

                    b.Property<string>("Comments")
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)");

                    b.Property<DateTime>("DecidedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Reviewer")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.HasKey("DecisionId");

                    b.HasIndex("CandidateId");

                    b.HasIndex("CodeSolutionId")
                        .IsUnique();

                    b.ToTable("Decisions");
                });

            modelBuilder.Entity("EvroTrust.DigitalSigning.Persistence.Entities.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("OrderId"));

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("OrderId");

                    b.ToTable("Orders", (string)null);
                });

            modelBuilder.Entity("EvroTrust.DigitalSigning.Persistence.Entities.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("PaymentId");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("EvroTrust.DigitalSigning.Persistence.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ProductId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("ProductId");

                    b.ToTable("Products", (string)null);
                });

            modelBuilder.Entity("EvroTrust.DigitalSigning.Persistence.Entities.Shipment", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ShipmentDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("TrackingNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("OrderId");

                    b.ToTable("Shipments", (string)null);
                });

            modelBuilder.Entity("OrderProduct", b =>
                {
                    b.Property<int>("OrdersOrderId")
                        .HasColumnType("integer");

                    b.Property<int>("ProductsProductId")
                        .HasColumnType("integer");

                    b.HasKey("OrdersOrderId", "ProductsProductId");

                    b.HasIndex("ProductsProductId");

                    b.ToTable("OrderProduct");
                });

            modelBuilder.Entity("EvroTrust.DigitalSigning.Persistence.Entities.CodeSolution", b =>
                {
                    b.HasOne("EvroTrust.DigitalSigning.Persistence.Entities.Candidate", "Candidate")
                        .WithMany("CodeSolutions")
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EvroTrust.DigitalSigning.Persistence.Entities.CodingTask", "CodingTask")
                        .WithMany("CodeSolutions")
                        .HasForeignKey("CodingTaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidate");

                    b.Navigation("CodingTask");
                });

            modelBuilder.Entity("EvroTrust.DigitalSigning.Persistence.Entities.CodingTask", b =>
                {
                    b.HasOne("EvroTrust.DigitalSigning.Persistence.Entities.Candidate", "Candidate")
                        .WithMany()
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Candidate");
                });

            modelBuilder.Entity("EvroTrust.DigitalSigning.Persistence.Entities.Decision", b =>
                {
                    b.HasOne("EvroTrust.DigitalSigning.Persistence.Entities.Candidate", "Candidate")
                        .WithMany("Decisions")
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EvroTrust.DigitalSigning.Persistence.Entities.CodeSolution", "CodeSolution")
                        .WithOne("Decision")
                        .HasForeignKey("EvroTrust.DigitalSigning.Persistence.Entities.Decision", "CodeSolutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidate");

                    b.Navigation("CodeSolution");
                });

            modelBuilder.Entity("EvroTrust.DigitalSigning.Persistence.Entities.Payment", b =>
                {
                    b.HasOne("EvroTrust.DigitalSigning.Persistence.Entities.Order", "Order")
                        .WithOne("Payment")
                        .HasForeignKey("EvroTrust.DigitalSigning.Persistence.Entities.Payment", "PaymentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("EvroTrust.DigitalSigning.Persistence.Entities.Shipment", b =>
                {
                    b.HasOne("EvroTrust.DigitalSigning.Persistence.Entities.Order", "Order")
                        .WithMany("Shipments")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("OrderProduct", b =>
                {
                    b.HasOne("EvroTrust.DigitalSigning.Persistence.Entities.Order", null)
                        .WithMany()
                        .HasForeignKey("OrdersOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EvroTrust.DigitalSigning.Persistence.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EvroTrust.DigitalSigning.Persistence.Entities.Candidate", b =>
                {
                    b.Navigation("CodeSolutions");

                    b.Navigation("Decisions");
                });

            modelBuilder.Entity("EvroTrust.DigitalSigning.Persistence.Entities.CodeSolution", b =>
                {
                    b.Navigation("Decision");
                });

            modelBuilder.Entity("EvroTrust.DigitalSigning.Persistence.Entities.CodingTask", b =>
                {
                    b.Navigation("CodeSolutions");
                });

            modelBuilder.Entity("EvroTrust.DigitalSigning.Persistence.Entities.Order", b =>
                {
                    b.Navigation("Payment")
                        .IsRequired();

                    b.Navigation("Shipments");
                });
#pragma warning restore 612, 618
        }
    }
}
